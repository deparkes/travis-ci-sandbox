dist: xenial
language: python
matrix:
  include:
    - name: "Python 3.7.1 on Xenial Linux"
      python: 3.7           # this works for Linux but is ignored on macOS or Windows
      dist: xenial          # required for Python >= 3.7
      before_install:
        - sudo apt-get update
        # You may want to periodically update this, although the conda update
        # conda line below will keep everything up-to-date.  We do this
        # conditionally because it saves us some downloading if the version is
        # the same.
        - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
            wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
          else
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
          fi
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - hash -r
    - name: "Python 3.7.2 on macOS"
      os: osx
      osx_image: xcode10.2  # Python 3.7.2 running on macOS 10.14.3
      language: shell       # 'language: python' is an error on Travis CI macOS
    - name: "Python 3.7.3 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      before_install: 
        - choco install miniconda
      env: PATH=/c/miniconda/bin:$PATH
install:
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # Replace dep1 dep2 ... with your dependencies
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - conda install -c conda-forge -n test-environment wxpython 
  - source activate test-environment
  - echo "python setup.py install"

script:
  # Your test script goes here
  echo "python setup.py test"

after_success:
  - pip install pyinstaller
  - python -m PyInstaller my_app.py
  
before_deploy:
  - ls
  - echo "do some stuff"
deploy:
  provider: script
  skip_cleanup: True
  script: echo "Do deployment"
